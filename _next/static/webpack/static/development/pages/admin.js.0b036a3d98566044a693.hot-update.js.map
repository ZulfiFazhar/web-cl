{"version":3,"file":"static/webpack/static\\development\\pages\\admin.js.0b036a3d98566044a693.hot-update.js","sources":["webpack:///./src/modules/admin/section/registrant/index.jsx"],"sourcesContent":["/* eslint-disable camelcase */\r\n/* eslint-disable no-shadow */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable no-use-before-define */\r\n\r\nimport moment from 'moment';\r\nimport styled from 'styled-components';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nimport { ReactTable } from 'components';\r\nimport { zustandState } from 'services';\r\n\r\nimport Modal from './Modal';\r\nimport Controls from './Controls';\r\n\r\nconst Heading = styled('p')`\r\n  font-size: 20px;\r\n  text-align: center;\r\n\r\n  padding: 20px 0 40px 0;\r\n`;\r\n\r\nconst Download = styled('a')`\r\n  color: #2080d9;\r\n  text-decoration: underline;\r\n`;\r\n\r\nconst Detail = styled('p')`\r\n  color: #2080d9;\r\n  text-decoration: underline;\r\n`;\r\n\r\nconst FetchingData = styled('div')`\r\n  width: 100%;\r\n  text-align: center;\r\n  padding: 30px 0;\r\n`;\r\n\r\nconst Registrant = ({ registrantData, loading }) => {\r\n  const [data, setData] = useState([]);\r\n  const [filterData, setFilterData] = useState({\r\n    angkatan: '2023',\r\n    keyword: '',\r\n  });\r\n\r\n  const defaultModalData = {\r\n    id: 0,\r\n    nim: '',\r\n    name: '',\r\n    years: '',\r\n    email: '',\r\n    portfolio: '',\r\n    submitted: '',\r\n    telegramID: '',\r\n    linkedin: '',\r\n    motivation: '',\r\n    token: null,\r\n  };\r\n\r\n  const state = {\r\n    user: zustandState((state) => state.user),\r\n  };\r\n\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [modalData, setModalData] = useState({\r\n    ...defaultModalData,\r\n    token: state.user && state.user.token,\r\n  });\r\n\r\n  const [tableTitle] = useState([\r\n    {\r\n      id: 'no',\r\n      title: 'No',\r\n      Cell: ({ row }) => {\r\n        const { index } = row;\r\n\r\n        return <p>{index + 1}</p>;\r\n      },\r\n    },\r\n    {\r\n      title: 'NIM',\r\n      accessor: 'nim',\r\n    },\r\n    {\r\n      title: 'Nama',\r\n      accessor: 'nama_lengkap',\r\n    },\r\n    {\r\n      title: 'Angkatan',\r\n      accessor: 'angkatan',\r\n    },\r\n    {\r\n      title: 'No HP',\r\n      accessor: 'no_hp',\r\n    },\r\n    {\r\n      title: 'Telegram',\r\n      accessor: 'id_telegram',\r\n    },\r\n    {\r\n      title: 'Link linkedin',\r\n      accessor: 'linkedin',\r\n      Cell: ({ value }) => {\r\n        return (\r\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href={`${value}`}>\r\n            linkedin\r\n          </a>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      id: 'portfolio',\r\n      title: 'Portfolio',\r\n      accessor: 'id',\r\n      Cell: ({ value }) => {\r\n        const { user } = state;\r\n        const { baseURL } = process.env;\r\n\r\n        return (\r\n          <Download\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            href={`${baseURL}/api/registrations/${value}/portfolio?token=${user.token}`}\r\n          >\r\n            Download\r\n          </Download>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      id: 'detail',\r\n      accessor: 'id',\r\n      title: 'Detail',\r\n      Cell: ({ value }) => {\r\n        return <Detail onClick={() => detailHandler(value)}>Lihat</Detail>;\r\n      },\r\n    },\r\n    {\r\n      id: 'waktu',\r\n      title: 'Time',\r\n      accessor: 'created_at',\r\n      Cell: ({ value }) => {\r\n        return <p>{moment(value).format('HH:mm')}</p>;\r\n      },\r\n    },\r\n    {\r\n      id: 'submitted',\r\n      title: 'Submitted',\r\n      accessor: 'created_at',\r\n      Cell: ({ value }) => {\r\n        return <p>{moment(value).format('DD/MM/YYYY')}</p>;\r\n      },\r\n    },\r\n  ]);\r\n\r\n  const detailHandler = (id) => {\r\n    setModalData({ ...modalData, id });\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const controlsOnChangeHandler = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    setFilterData({\r\n      ...filterData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const { angkatan, keyword } = filterData;\r\n\r\n    if (keyword || angkatan) {\r\n      let temp = [...registrantData];\r\n\r\n      if (angkatan) {\r\n        temp = temp.filter((item) => {\r\n          const { created_at } = item;\r\n          const date = moment(created_at).format('YYYY-MM');\r\n\r\n          if (angkatan === '2022') {\r\n            return date === `${angkatan}-02`;\r\n          }\r\n\r\n          return date >= `2022-11`;\r\n        });\r\n      }\r\n\r\n      if (keyword) {\r\n        temp = temp.filter(\r\n          (item) =>\r\n            item.nim.toString().includes(keyword) ||\r\n            item.nama_lengkap.toLowerCase().includes(keyword.toLowerCase())\r\n        );\r\n      }\r\n\r\n      setData([...temp]);\r\n    } else {\r\n      setData([...registrantData]);\r\n    }\r\n  }, [filterData]);\r\n\r\n  useEffect(() => {\r\n    const { id } = modalData;\r\n\r\n    if (id) {\r\n      const filtered = registrantData.filter((item) => item.id === id);\r\n\r\n      if (filtered.length > 0) {\r\n        const [item] = filtered;\r\n        const {\r\n          nim,\r\n          email,\r\n          angkatan,\r\n          motivasi,\r\n          portfolio,\r\n          created_at,\r\n          id_telegram,\r\n          nama_lengkap,\r\n        } = item;\r\n\r\n        setModalData({\r\n          ...modalData,\r\n          nim,\r\n          email,\r\n          portfolio,\r\n          years: angkatan,\r\n          name: nama_lengkap,\r\n          motivation: motivasi,\r\n          submitted: created_at,\r\n          telegramID: id_telegram,\r\n        });\r\n\r\n        setIsModalOpen(true);\r\n      }\r\n    } else {\r\n      closeModal();\r\n    }\r\n  }, [modalData.id]);\r\n\r\n  useEffect(() => {\r\n    setData([...registrantData]);\r\n  }, [registrantData]);\r\n\r\n  useEffect(() => {\r\n    const { angkatan } = filterData;\r\n\r\n    let temp = [...registrantData];\r\n\r\n    if (angkatan) {\r\n      temp = temp.filter((item) => {\r\n        const { created_at } = item;\r\n        const date = moment(created_at).format('YYYY-MM');\r\n\r\n        if (angkatan === '2022') {\r\n          return date === `${angkatan}-02`;\r\n        }\r\n\r\n        return date >= `2022-11`;\r\n      });\r\n    }\r\n\r\n    setData([...temp]);\r\n  }, [registrantData]);\r\n\r\n  return (\r\n    <div>\r\n      <Heading>List of Registrant</Heading>\r\n      {registrantData.length > 0 && (\r\n        <>\r\n          <Controls data={data} filterData={filterData} onChange={controlsOnChangeHandler} />\r\n          <ReactTable data={data} columns={tableTitle} />\r\n        </>\r\n      )}\r\n      {registrantData.length === 0 && loading && (\r\n        <FetchingData>\r\n          <p>Fetching data...</p>\r\n        </FetchingData>\r\n      )}\r\n      {registrantData.length === 0 && !loading && (\r\n        <FetchingData>\r\n          <p>No Data</p>\r\n        </FetchingData>\r\n      )}\r\n      {isModalOpen && <Modal data={modalData} closeModal={closeModal} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Registrant;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AAAA;AAFA;AAAA;AAKA;AAEA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAnFA;AAsFA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAEA;AAIA;AAEA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;;;;A","sourceRoot":""}